stages:
  - build
  - push
  - deploy

variables:
  AWS_DEFAULT_REGION: "us-east-1"
  ECR_REPOSITORY: "959856655972.dkr.ecr.us-east-1.amazonaws.com/vllm"
  AWS_ACCESS_KEY_ID: $AWS_ACCESS_KEY_ID
  AWS_SECRET_ACCESS_KEY: $AWS_SECRET_ACCESS_KEY
  ECS_CLUSTER_NAME: "vllm"
  ECS_SERVICE_NAME: "vllm"


build_image:
  stage: build
  image: docker:latest
  services:
    - docker:dind
  script:
    - echo "ECR repo is $ECR_REPOSITORY and AWS_DEFAULT_REGION is $AWS_DEFAULT_REGION"
    - echo "Building Docker Image..."
    - docker build -t $ECR_REPOSITORY:$CI_COMMIT_SHORT_SHA -f Dockerfile .


push_image:
  stage: push
  image: docker:latest
  before_script:
    - apk add --no-cache curl jq python3 py3-pip
    - python3 -m venv /awscli-venv
    - source /awscli-venv/bin/activate
    - pip install --upgrade pip
    - pip install awscli
    - aws configure list
  script:
    - echo "AWS ECR Login..."
    - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $ECR_REPOSITORY
    - echo "Tagging Image as latest..."
    - docker tag $ECR_REPOSITORY:$CI_COMMIT_SHORT_SHA $ECR_REPOSITORY:latest
    - echo "Pushing Image with Commit SHA Tag..."
    - docker push $ECR_REPOSITORY:$CI_COMMIT_SHORT_SHA
    - echo "Pushing Image with latest Tag..."
    - docker push $ECR_REPOSITORY:latest

deploy_img:
  stage: deploy
  image: 
    name: amazon/aws-cli:latest
    entrypoint: [""]
  script:
    - export AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID
    - export AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY
    - export AWS_DEFAULT_REGION=$AWS_DEFAULT_REGION
    - echo "Checking AWS CLI version..."
    - aws --version
    - echo "AWS CLI is working correctly. Proceeding with ECS service update..."
    - aws ecs update-service --cluster $ECS_CLUSTER_NAME --service $ECS_SERVICE_NAME --force-new-deployment
  
